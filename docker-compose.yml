version: '3.7'

services:
  vernemq:
    build:
      container_name: ${COMPOSE_PROJECT_NAME}_${SERVICE_NAME}
      context: ./
      args:
        - DOCKER_IMAGE
        - VERNEMQ_PLUGIN_PATH
    init: true
    cap_drop: 
      - ALL
    restart: ${DOCKER_RESTART_POLICY}
    env_file:
      - ${DOCKER_GENERATED_ENV_FILE:-./env/defaults}    
    networks:
      backend:
        aliases: 
          - ${SERVICE_NAME}
      frontend:
        aliases: 
          - ${SERVICE_NAME} 
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 500M       
    logging:
      driver: ${DOCKER_LOGGING_DRIVER}
      options:
          max-file: ${DOCKER_LOGGING_MAX_FILE}
          max-size: ${DOCKER_LOGGING_MAX_SIZE}
    labels:
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-host.rule=Host(`${SERVICE_NAME}.${APP_PREFIX}.localhost`)
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-path.rule=Host(`localhost`) && PathPrefix(`/${APP_PREFIX}/${SERVICE_NAME}`)
      
      - traefik.http.services.${APP_PREFIX}-${SERVICE_NAME}-http.loadbalancer.server.port=${VERNEMQ_WS_PORT}

      - traefik.http.middlewares.${APP_PREFIX}-${SERVICE_NAME}-stripprefix.stripprefix.prefixes=/${APP_PREFIX}/${SERVICE_NAME}

      - traefik.http.middlewares.${APP_PREFIX}-${SERVICE_NAME}-middlewares-path.chain.middlewares=${APP_PREFIX}-${SERVICE_NAME}-stripprefix
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-path.middlewares=${APP_PREFIX}-${SERVICE_NAME}-middlewares-path 

      - traefik.tcp.routers.${APP_PREFIX}-${SERVICE_NAME}.rule=HostSNI(`${SERVICE_NAME}.${APP_PREFIX}.localhost`)
      - traefik.tcp.services.${APP_PREFIX}-${SERVICE_NAME}-tcp.loadbalancer.server.port=${VERNEMQ_MQTT_PORT}

networks:
  backend:
    name: ${APP_PREFIX}_${DOCKER_BACKEND_NETWORK_NAME}
  frontend:
    external:
      name: ${DOCKER_FRONTEND_NETWORK_NAME}          